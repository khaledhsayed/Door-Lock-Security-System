Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./uart.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./external_eeprom.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./final_MC2.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

g_password          0xa               ./final_MC2.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./external_eeprom.o
LOAD ./final_MC2.o
LOAD ./i2c.o
LOAD ./timer1_config.o
LOAD ./uart.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xd42
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./external_eeprom.o
 .text          0x00000092        0x0 ./final_MC2.o
 .text          0x00000092        0x0 ./i2c.o
 .text          0x00000092        0x0 ./timer1_config.o
 .text          0x00000092        0x0 ./uart.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.EEPROM_init
                0x00000092       0x16 ./external_eeprom.o
                0x00000092                EEPROM_init
 .text.EEPROM_writeByte
                0x000000a8       0x82 ./external_eeprom.o
                0x000000a8                EEPROM_writeByte
 .text.EEPROM_readByte
                0x0000012a       0xc0 ./external_eeprom.o
                0x0000012a                EEPROM_readByte
 .text.savePassword
                0x000001ea       0x44 ./final_MC2.o
                0x000001ea                savePassword
 .text.getPassword
                0x0000022e       0x52 ./final_MC2.o
                0x0000022e                getPassword
 .text.goToOperation
                0x00000280      0x14e ./final_MC2.o
                0x00000280                goToOperation
 .text.doorActivities
                0x000003ce       0x86 ./final_MC2.o
                0x000003ce                doorActivities
 .text.buzzerAlerting
                0x00000454       0x48 ./final_MC2.o
                0x00000454                buzzerAlerting
 .text.main     0x0000049c       0xcc ./final_MC2.o
                0x0000049c                main
 .text.TWI_init
                0x00000568       0x58 ./i2c.o
                0x00000568                TWI_init
 .text.TWI_start
                0x000005c0       0x20 ./i2c.o
                0x000005c0                TWI_start
 .text.TWI_stop
                0x000005e0       0x16 ./i2c.o
                0x000005e0                TWI_stop
 .text.TWI_write
                0x000005f6       0x2e ./i2c.o
                0x000005f6                TWI_write
 .text.TWI_readWithACK
                0x00000624       0x26 ./i2c.o
                0x00000624                TWI_readWithACK
 .text.TWI_readWithNACK
                0x0000064a       0x26 ./i2c.o
                0x0000064a                TWI_readWithNACK
 .text.TWI_getStatus
                0x00000670       0x1e ./i2c.o
                0x00000670                TWI_getStatus
 .text.TIMER1_init
                0x0000068e      0x19e ./timer1_config.o
                0x0000068e                TIMER1_init
 .text.Timer1_OVF_setCallBack
                0x0000082c       0x24 ./timer1_config.o
                0x0000082c                Timer1_OVF_setCallBack
 .text.Timer1_CMPA_setCallBack
                0x00000850       0x24 ./timer1_config.o
                0x00000850                Timer1_CMPA_setCallBack
 .text.Timer1_CMPB_setCallBack
                0x00000874       0x24 ./timer1_config.o
                0x00000874                Timer1_CMPB_setCallBack
 .text.Timer1_DeInit
                0x00000898       0x4c ./timer1_config.o
                0x00000898                Timer1_DeInit
 .text.__vector_8
                0x000008e4       0x66 ./timer1_config.o
                0x000008e4                __vector_8
 .text.__vector_6
                0x0000094a       0x66 ./timer1_config.o
                0x0000094a                __vector_6
 .text.__vector_7
                0x000009b0       0x66 ./timer1_config.o
                0x000009b0                __vector_7
 .text.UART_init
                0x00000a16      0x1c0 ./uart.o
                0x00000a16                UART_init
 .text.UART_sendByte
                0x00000bd6       0x2e ./uart.o
                0x00000bd6                UART_sendByte
 .text.UART_recieveByte
                0x00000c04       0x1e ./uart.o
                0x00000c04                UART_recieveByte
 .text.UART_sendString
                0x00000c22       0x52 ./uart.o
                0x00000c22                UART_sendString
 .text.UART_receiveString
                0x00000c74       0x86 ./uart.o
                0x00000c74                UART_receiveString
 .text.libgcc   0x00000cfa       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00000cfa                __udivmodsi4
 .text.libgcc   0x00000d3e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000d3e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000d3e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000d3e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000d3e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000d3e                exit
                0x00000d3e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000d3e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000d42                _etext = .

.data           0x00800060       0x14 load address 0x00000d42
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./external_eeprom.o
 .data          0x00800060        0x0 ./final_MC2.o
 .data          0x00800060        0x0 ./i2c.o
 .data          0x00800060        0x0 ./timer1_config.o
 .data          0x00800060        0x0 ./uart.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.TWI_config
                0x00800060        0x2 ./external_eeprom.o
                0x00800060                TWI_config
 *(.rodata)
 *(.rodata*)
 .rodata.C.2.1426
                0x00800062        0x6 ./final_MC2.o
 .rodata.C.0.1412
                0x00800068        0x6 ./final_MC2.o
 .rodata.C.12.1508
                0x0080006e        0x5 ./final_MC2.o
 *(.gnu.linkonce.d*)
                0x00800074                . = ALIGN (0x2)
 *fill*         0x00800073        0x1 00
                0x00800074                _edata = .
                0x00800074                PROVIDE (__data_end, .)

.bss            0x00800074       0x12
                0x00800074                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800074        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800074        0x0 ./external_eeprom.o
 .bss           0x00800074        0x0 ./final_MC2.o
 .bss           0x00800074        0x0 ./i2c.o
 .bss           0x00800074        0x0 ./timer1_config.o
 .bss           0x00800074        0x0 ./uart.o
 .bss           0x00800074        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800074        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800074        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800074        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.g_delayFlag
                0x00800074        0x1 ./final_MC2.o
 .bss.g_ticks   0x00800075        0x1 ./final_MC2.o
 .bss.g_OVF_callBackPtr
                0x00800076        0x2 ./timer1_config.o
 .bss.g_CMPA_callBackPtr
                0x00800078        0x2 ./timer1_config.o
 .bss.g_CMPB_callBackPtr
                0x0080007a        0x2 ./timer1_config.o
 *(COMMON)
 COMMON         0x0080007c        0xa ./final_MC2.o
                0x0080007c                g_password
                0x00800086                PROVIDE (__bss_end, .)
                0x00000d42                __data_load_start = LOADADDR (.data)
                0x00000d56                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800086        0x0
                0x00800086                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800086                PROVIDE (__noinit_end, .)
                0x00800086                _end = .
                0x00800086                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1950
 *(.stab)
 .stab          0x00000000      0x624 ./external_eeprom.o
 .stab          0x00000624      0x6c0 ./final_MC2.o
                                0x954 (size before relaxing)
 .stab          0x00000ce4      0x36c ./i2c.o
                                0x5f4 (size before relaxing)
 .stab          0x00001050      0x474 ./timer1_config.o
                                0x714 (size before relaxing)
 .stab          0x000014c4      0x48c ./uart.o
                                0x72c (size before relaxing)

.stabstr        0x00000000      0xf75
 *(.stabstr)
 .stabstr       0x00000000      0xf75 ./external_eeprom.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(final_MC2.elf elf32-avr)
LOAD linker stubs
